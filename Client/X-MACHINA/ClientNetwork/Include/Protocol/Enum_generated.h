// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_ENUM_FBPROTOCOL_H_
#define FLATBUFFERS_GENERATED_ENUM_FBPROTOCOL_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 24 &&
              FLATBUFFERS_VERSION_MINOR == 3 &&
              FLATBUFFERS_VERSION_REVISION == 7,
             "Non-compatible flatbuffers version included");

namespace FBProtocol {

enum OBJECTTYPE : int8_t {
  OBJECTTYPE_NONE = 0,
  OBJECTTYPE_PLAYER = 1,
  OBJECTTYPE_MONSTER = 2,
  OBJECTTYPE_STRUCTURE = 3,
  OBJECTTYPE_MIN = OBJECTTYPE_NONE,
  OBJECTTYPE_MAX = OBJECTTYPE_STRUCTURE
};

inline const OBJECTTYPE (&EnumValuesOBJECTTYPE())[4] {
  static const OBJECTTYPE values[] = {
    OBJECTTYPE_NONE,
    OBJECTTYPE_PLAYER,
    OBJECTTYPE_MONSTER,
    OBJECTTYPE_STRUCTURE
  };
  return values;
}

inline const char * const *EnumNamesOBJECTTYPE() {
  static const char * const names[5] = {
    "NONE",
    "PLAYER",
    "MONSTER",
    "STRUCTURE",
    nullptr
  };
  return names;
}

inline const char *EnumNameOBJECTTYPE(OBJECTTYPE e) {
  if (::flatbuffers::IsOutRange(e, OBJECTTYPE_NONE, OBJECTTYPE_STRUCTURE)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesOBJECTTYPE()[index];
}

enum MOVESTATE : int8_t {
  MOVESTATE_MOVE_START = 0,
  MOVESTATE_MOVE_PROGRESS = 1,
  MOVESTATE_MOVE_END = 2,
  MOVESTATE_MIN = MOVESTATE_MOVE_START,
  MOVESTATE_MAX = MOVESTATE_MOVE_END
};

inline const MOVESTATE (&EnumValuesMOVESTATE())[3] {
  static const MOVESTATE values[] = {
    MOVESTATE_MOVE_START,
    MOVESTATE_MOVE_PROGRESS,
    MOVESTATE_MOVE_END
  };
  return values;
}

inline const char * const *EnumNamesMOVESTATE() {
  static const char * const names[4] = {
    "MOVE_START",
    "MOVE_PROGRESS",
    "MOVE_END",
    nullptr
  };
  return names;
}

inline const char *EnumNameMOVESTATE(MOVESTATE e) {
  if (::flatbuffers::IsOutRange(e, MOVESTATE_MOVE_START, MOVESTATE_MOVE_END)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesMOVESTATE()[index];
}

}  // namespace FBProtocol

#endif  // FLATBUFFERS_GENERATED_ENUM_FBPROTOCOL_H_
